users table 
CREATE TABLE USERS (
  ROLL_NUMBER VARCHAR2(20) NOT NULL PRIMARY KEY,
  USERNAME    VARCHAR2(50) NOT NULL,
  EMAIL       VARCHAR2(100) NOT NULL,
  PASSWORD    VARCHAR2(100) NOT NULL,
  ROLE        VARCHAR2(20) NOT NULL
);

student table
CREATE TABLE STUDENTS (
  STUDENT_ID     VARCHAR2(20)  NOT NULL PRIMARY KEY,
  NAME           VARCHAR2(100) NOT NULL,
  EMAIL          VARCHAR2(100) NOT NULL,
  PHONE_NUMBER   VARCHAR2(15),
  GENDER         VARCHAR2(10),
  YEAR           NUMBER(1),
  SEMESTER       NUMBER(1),
  BRANCH         VARCHAR2(50),
  DATE_OF_BIRTH  DATE,
  PASSWORD       VARCHAR2(100),
  ROLE           VARCHAR2(20),
  CGPA           NUMBER(4,2)
);

faculty table
CREATE TABLE FACULTY (
  FACULTY_ID     VARCHAR2(100) NOT NULL PRIMARY KEY,
  USERNAME       VARCHAR2(100) NOT NULL,
  EMAIL          VARCHAR2(100),
  PASSWORD       VARCHAR2(255),
  DEPARTMENT     VARCHAR2(50),
  PHONE_NUMBER   VARCHAR2(20),
  DATE_JOINED    DATE,
  DATE_OF_BIRTH  DATE,
  QUALIFICATION  VARCHAR2(255),
  EXPERIENCE     NUMBER,
  GENDER         VARCHAR2(10),
  PROFILE_PHOTO  VARCHAR2(255),
  ROLE           VARCHAR2(50)
);

admin table
CREATE TABLE ADMINS (
  ADMIN_ID       VARCHAR2(20)  NOT NULL PRIMARY KEY,
  USERNAME       VARCHAR2(50)  NOT NULL,
  EMAIL          VARCHAR2(100) NOT NULL,
  PHONE_NUMBER   VARCHAR2(15),
  GENDER         VARCHAR2(10),
  DOB            DATE,
  PROFILE_PHOTO  VARCHAR2(255),
  PASSWORD       VARCHAR2(100),
  ROLE           VARCHAR2(20)
);

courses table
CREATE TABLE COURSES (
  COURSE_ID     VARCHAR2(20)   NOT NULL PRIMARY KEY,
  COURSE_NAME   VARCHAR2(100)  NOT NULL,
  DESCRIPTION   CLOB           NOT NULL,
  SYLLABUS      CLOB           NOT NULL,
  COURSE_TYPE   VARCHAR2(20)   NOT NULL,
  FACULTY_ID    VARCHAR2(20),
  BRANCH        VARCHAR2(50),
  CONSTRAINT fk_course_faculty FOREIGN KEY (FACULTY_ID)
    REFERENCES FACULTY(FACULTY_ID)
);

projects
CREATE TABLE PROJECTS (
  PROJECT_ID    VARCHAR2(100)  NOT NULL PRIMARY KEY,
  PROJECT_NAME  VARCHAR2(255),
  DESCRIPTION   VARCHAR2(4000),
  TECH_STACK    VARCHAR2(255),
  STATUS        VARCHAR2(50),
  FACULTY_ID    VARCHAR2(100),
  CONSTRAINT fk_project_faculty FOREIGN KEY (FACULTY_ID)
    REFERENCES FACULTY(FACULTY_ID)
);

teach course request table
CREATE TABLE teach_course_requests (
    FACULTY_ID VARCHAR2(50) NOT NULL,
    COURSE_ID VARCHAR2(50) NOT NULL,
    STATUS VARCHAR2(20) NOT NULL,
    REQUEST_DATE DATE NOT NULL,
    CONSTRAINT fk_faculty
        FOREIGN KEY (FACULTY_ID) 
        REFERENCES faculty(FACULTY_ID),
    CONSTRAINT fk_course
        FOREIGN KEY (COURSE_ID) 
        REFERENCES course(COURSE_ID)
);

faculty courses
CREATE TABLE FACULTY_COURSES (
  FACULTY_ID VARCHAR2(50) NOT NULL,
  COURSE_ID VARCHAR2(50) NOT NULL,
  PRIMARY KEY (FACULTY_ID, COURSE_ID),
  CONSTRAINT fk_faculty FOREIGN KEY (FACULTY_ID)
    REFERENCES FACULTY(FACULTY_ID),
  CONSTRAINT fk_course FOREIGN KEY (COURSE_ID)
    REFERENCES COURSES(COURSE_ID)
);

